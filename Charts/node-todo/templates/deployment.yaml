apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "node-todo.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "node-todo.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/version: {{ .Chart.AppVersion | default .Chart.Version }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "node-todo.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "node-todo.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
      annotations:
        {{- toYaml .Values.podAnnotations | nindent 8 }}
    spec:
      serviceAccountName: {{ include "node-todo.serviceAccountName" . }}
      securityContext:
        runAsNonRoot: {{ .Values.securityContext.runAsNonRoot }}
        runAsUser: {{ .Values.securityContext.runAsUser }}
      containers:
        - name: app
          image: "{{ .Values.image.repository }}@{{ .Values.image.digest | default (printf ":%s" (.Values.image.tag | default "latest")) }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: 3000
          securityContext:
            allowPrivilegeEscalation: {{ .Values.securityContext.allowPrivilegeEscalation }}
            readOnlyRootFilesystem: {{ .Values.securityContext.readOnlyRootFilesystem }}
            capabilities:
              drop: ["NET_RAW", "ALL"]
          env:
            - name: GIT_SHA
              value: "{{ .Values.env.GIT_SHA }}"
            - name: USE_DYNAMO
              value: "{{ .Values.env.USE_DYNAMO }}"
            - name: AWS_REGION
              value: "{{ .Values.env.AWS_REGION }}"
            - name: DYNAMO_TABLE
              value: "{{ .Values.env.DYNAMO_TABLE }}"
          readinessProbe:
            httpGet: { path: /healthz, port: 3000 }
            initialDelaySeconds: 3
            periodSeconds: 5
          livenessProbe:
            httpGet: { path: /healthz, port: 3000 }
            initialDelaySeconds: 10
            periodSeconds: 10
          resources:
            {{- toYaml .Values.resources | nindent 12 }}